#!/usr/bin/env python

###  example agent output: #################################################################
#
# <<<backuppc_report>>>
#warn_flags,backup_number,host_name,date_time,size_mb,lvl,duratation_min,xfer_err,share_err,file_err,tar_err,age_days
#,184,host1,2019-07-24 01:45,3483,1,0,0,0,0,0,22
#,185,host1,2019-07-25 01:08,3481,1,1,0,0,0,0,21
#,186,host1,2019-07-26 01:07,3486,1,2,0,0,0,0,20
#,187,host1,2019-07-27 01:19,3501,0,16,0,0,0,0,19
#,188,host1,2019-07-28 01:02,3506,1,1,0,0,0,0,18
#,190,host2,2019-07-24 01:01,4909,1,3,0,0,0,0,22
#,191,host2,2019-07-25 01:00,4835,1,3,0,0,0,0,21
#,192,host2,2019-07-26 01:02,4864,0,4,0,0,0,0,20
#,193,host2,2019-07-27 01:09,4805,1,12,0,0,0,0,19
#E,67,host3,2019-08-09 18:15,86918,1,7,5,0,0,5,6
#E,68,host3,2019-08-10 18:00,86806,1,8,3,0,0,3,5
#,70,host3,2019-08-10 20:42,86780,1,2,0,0,0,0,4
#E,72,host3,2019-08-11 18:48,86890,1,8,3,0,0,3,4
#E,73,host3,2019-08-12 17:41,86934,1,11,3,0,0,3,3
#E,74,host3,2019-08-14 19:02,87159,1,31,3,0,0,3,1
#ED,75,host3,2019-08-15 19:02,86925,1,10,3,0,0,3,0
#
#
# run check from cli 
# cmk --checks=backuppc_report -I <hostname>
# cmk --checks=backuppc_report -nvp <hostname>
#
############################################################################################

############################################################################################
# HELPER FUNCTIONS
############################################################################################

# set ok_code checks if the ok_code is higher
def set_ok_code(current_ok_code=int(), new_ok_code=int()):
    ok_code = current_ok_code
    if new_ok_code > ok_code:
        ok_code = new_ok_code

    return ok_code


############################################################################################
# INVENTORY FUNCTIONS
############################################################################################
def inventory_backuppc_report(info):
    last_host=str()
    current_host=str()
    for line in info:
        # skip header line
        if 'warn_flags,backup_number,host_name' in line[0]:
            continue

        # if a new host is detected yield it
        current_host=str(line[0]).split(',')[2]
        if current_host != last_host:
            last_host=current_host
            yield current_host, None


def inventory_backuppc_summary(info):
    if len(info) >= 1:
        yield "", None

############################################################################################
# DEFAULT LEVELS
############################################################################################

factory_settings['default_levels_backuppc_summary'] = {
    'total_tooold_count': (1, 2),
    'total_disabled_count': (1, 1),
    'total_progress_count': (4, 8),
    'total_partial_count': (2, 3),
    'total_error_count': (50, 60)
}

############################################################################################
# CHECK FUNCTIONS
############################################################################################
def check_backuppc_report(item, params, info):

    # handle backup hosts
    current_host=str()
    for line in info:
        # skip header line
        if 'warn_flags,backup_number,host_name' in line[0]:
            continue
    
        #print ' '.join(line)
    #print "item: " + str(item)
    #print "parems: " + str(params)
    #print "info:" + str(info)
    return 3, "Sorry - not implemented"


def check_backuppc_summary(item, params, info):
    ok_code = 0 
    output = list()
    perfdata = list()

    total_host_count = 0
    total_progress_count = 0
    total_partial_count = 0
    total_error_count = 0
    total_tooold_count = 0
    total_disabled_count = 0
    total_backupc_count = len(info) - 1 # ignore header line

    current_host=str()
    for line in info:
        if current_host != str(line[0]).split(',')[2]:
            current_host = str(line[0]).split(',')[2]
            total_host_count += 1

        warn_flag = str(line[0]).split(',')[0]
        if '*' in warn_flag:
            total_progress_count += 1
        if 'P' in warn_flag:
            total_partial_count += 1
        if 'E' in warn_flag:
            total_error_count += 1
        if 'O' in warn_flag:
            total_tooold_count += 1
        if 'D' in warn_flag:
            total_disabled_count += 1

    # Number of hosts
    output.append("Hosts: " + str(total_host_count))
    perfdata.append(('total_host_count', int(total_host_count), None, None))

    # Hosts out of data
    output.append("Hosts out of date: " + str(total_tooold_count))
    perfdata.append(('total_tooold_count', int(total_tooold_count), None, None))

    # Disabled Hosts
    output.append("Hosts disabled: " + str(total_disabled_count))
    perfdata.append(('total_disabled_count', int(total_disabled_count), None, None))

    # Total Backups
    output.append("Backups total: " + str(total_backupc_count))
    perfdata.append(('total_backupc_count', int(total_backupc_count), None, None))

    # Backup in Progress
    output.append("Backups in progress: " + str(total_progress_count))
    perfdata.append(('total_progress_count', int(total_progress_count), None, None))

    # Backup in partial state
    output.append("Backups partial: " + str(total_partial_count))
    perfdata.append(('total_partial_count', int(total_partial_count), None, None))

    # Backups with errors
    output.append("Backups with errors: " + str(total_error_count))
    perfdata.append(('total_error_count', int(total_error_count), None, None))

    return ok_code, ', '.join(output), perfdata


############################################################################################
# DEFINE CHECK
############################################################################################ 
check_info["backuppc_report"] = {
    'check_function':            check_backuppc_report,
    'inventory_function':        inventory_backuppc_report,
    'service_description':       'BackupPC %s' 
}


check_info["backuppc_report.summary"] = {
    'default_levels_variable':   'default_levels_backuppc_summary',
    'check_function':           check_backuppc_summary,
    'inventory_function':       inventory_backuppc_summary,
    'service_description':      'BackupPC - Summary',
    'has_perfdata':             True
}
